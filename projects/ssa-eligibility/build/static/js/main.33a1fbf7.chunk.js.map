{"version":3,"sources":["core/index.ts","core/log.ts","core/enums.ts","core/reportWebVitals.ts","survey/Answer.ts","survey/DefaultSteps.ts","survey/Questionnaire.ts","flows/ssa_eligibility/calculator.ts","flows/ssa_eligibility/questionnaire.ts","state/formReducer.ts","components/WizardNavbar.tsx","components/StepLayout.tsx","components/steps/DateOfBirth.tsx","components/steps/Landing.tsx","components/steps/MultipleChoice.tsx","components/steps/NoResults.tsx","components/steps/Results.tsx","components/steps/Summary.tsx","components/StepFactory.tsx","components/WizardDevPanel.tsx","components/WizardProgressBar.tsx","components/EligibilityWizard.tsx","App.tsx","index.tsx","core/date.ts","core/config.ts","core/debug.ts"],"names":["log","params","console","STEP","DIRECTION","PROGRESS_BAR_STATUS","ACTION","onPerfEntry","Answer","form","started","finished","birthdate","age","answers","Object","assign","this","Date","question","q","values","questionType","undefined","years","answer","indexOf","LANDING_STEP","RESULTS_STEP","SUMMARY_STEP","isValid","id","sectionId","questionText","RESULT_STEP","DEFAULT_STEPS","NO_RESULT_STEP","NO_RESULTS_STEP","Questionnaire","data","questions","header","results","flow","sections","actions","init","map","unique","filter","v","i","a","length","Error","join","ret","find","thisStep","direction","nextStep","getResults","match","nextQuestion","getQuestionById","requirements","forEach","r","next","meetsAllRequirements","n","getStep","props","step","forward","backward","s","some","thisQuestion","thisQuestionIdx","section","lastStep","reduce","acc","index","status","current","complete","idx","Math","floor","random","error","unshift","push","splice","validateSteps","requirement","minAge","maxAge","ageCalc","meetsMinAgeRequirements","meetsMaxAgeRequirements","meetsAgeCalcRequirements","meetsAnswerRequirements","keys","every","months","isFraCalculator","dob","monthOffset","dateOfBirth","getDateTime","fra","day","minus","plus","getDateTimeAge","year","0","1","supportingDetails","eligibilityNote","A","D","questionHelp","birthday","F","G","2","3","I","J","L","M","K","N","O","Q","C","H","S","T","W","Y","Z","AA","footer","name","code","description","E","explanation","V","X","R","P","U","type","online","action","call","hybrid","questionnaire","formReducer","previousState","merge","value","WizardNavbar","showPrevStep","showNextStep","nextLabel","goToStep","wizard","className","outline","onClick","getPreviousStep","data-testid","getNextStep","disabled","isNextEnabled","StepLayout","headerFirst","gridLayout","tablet","col","containerProps","text","SHOW_STEPS","getHeader","getSupportingDetails","getQuestionHelp","children","getFooter","DateOfBirth","getBirthdate","defaultValue","unit","dt","month","padStart","toString","toBirthdate","onChange","e","prop","val","target","bd","getAge","dispatchForm","getDomId","kebabCase","label","maxLength","minLength","Landing","getSelected","isSelected","getFieldSetName","getRadio","handler","updateForm","checked","getRadios","MultipleChoice","legend","legendStyle","NoResults","getAction","variant","href","getReason","result","reason","IS_DEV","dangerouslySetInnerHTML","__html","Results","heading","style","textAlign","getAnswers","key","Summary","StepFactory","WizardDevPanel","items","title","content","JSON","stringify","expanded","secondary","WizardProgressBar","getSections","centered","counters","EligibilityWizard","useWizard","useReducer","basic","aria-label","App","ReactDOM","render","StrictMode","document","getElementById","debug","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isValidDate","moment","date","substring","DateTime","fromJSDate","now","yearNow","monthNow","dateNow","yearDob","monthDob","dateDob","days","qs","URLSearchParams","window","location","search","has","get"],"mappings":"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","file":"static/js/main.33a1fbf7.chunk.js","sourcesContent":["export * from './config';\nexport * from './date';\nexport * from './debug';\nexport * from './enums';\nexport * from './log';\nexport * from './types';\n","/*\n  eslint-disable no-console,\n                 @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n*/\n\n/**\n * Logs to the console. All arguments logged as an array.\n * @param params\n * @returns\n */\nexport const log = (...params: any) => console.log([...params]);\n","/**\n * Special constants for the first, summary and last steps\n */\nexport enum STEP {\n  LANDING_STEP = 'Landing',\n  NO_RESULTS_STEP = 'No Results',\n  RESULTS_STEP = 'Results',\n  SUMMARY_STEP = 'Summary',\n}\n\n/**\n * Navigation direction for steps by array index (+1 or -1)\n */\nexport enum DIRECTION {\n  forward = 1,\n  backward = -1,\n}\n\n/**\n * Progress Bar status\n */\nexport enum PROGRESS_BAR_STATUS {\n  complete = 'complete',\n  current = 'current',\n}\n\nexport enum ACTION {\n  online = 'online',\n  call = 'call',\n  hybrid = 'hybrid',\n}\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import { values } from 'lodash';\nimport { STEP, TAge } from '../core';\nimport { IAnswer, IAnswerList } from './IAnswer';\n\nexport class Answer implements IAnswer {\n  public readonly started: Date;\n\n  finished?: Date;\n\n  public birthdate?: string;\n\n  public age?: TAge;\n\n  public answers: IAnswerList = {};\n\n  constructor(form: Partial<Answer> = {}) {\n    Object.assign(this, form);\n    this.started = new Date();\n  }\n\n  public static isValid(form: IAnswer, question: string): boolean {\n    if (!form.answers[question]) return false;\n    const q = form.answers[question];\n    const answers = values(q.answers);\n    switch (q.questionType) {\n      case 'DoB':\n        return undefined !== form?.age?.years && form.age.years > 0;\n      case 'multipleChoice':\n        return q.answer !== undefined && answers?.indexOf(q.answer) !== -1;\n      case STEP.LANDING_STEP || STEP.RESULTS_STEP || STEP.SUMMARY_STEP:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  public static isSelected(\n    form: IAnswer,\n    question: string,\n    answer: string,\n  ): boolean {\n    if (!form.answers[question]) return false;\n    const q = form.answers[question];\n    return Answer.isValid(form, question) && q.answer === answer;\n  }\n}\n","import { STEP } from '../core';\nimport { IQuestion } from './IQuestion';\n\n/**\n * Default landing step if none is defined\n */\nconst LANDING_STEP: IQuestion = {\n  id: STEP.LANDING_STEP,\n  sectionId: STEP.LANDING_STEP,\n  questionText: STEP.LANDING_STEP,\n  questionType: STEP.LANDING_STEP,\n  answers: {},\n};\n\n/**\n * Default result step if none is defined\n */\nconst RESULT_STEP: IQuestion = {\n  id: STEP.RESULTS_STEP,\n  sectionId: STEP.RESULTS_STEP,\n  questionText: STEP.RESULTS_STEP,\n  questionType: STEP.RESULTS_STEP,\n  answers: {},\n};\n\n/**\n * Default no results step if none is defined\n */\nconst NO_RESULT_STEP: IQuestion = {\n  id: STEP.NO_RESULTS_STEP,\n  sectionId: STEP.RESULTS_STEP,\n  questionText: STEP.NO_RESULTS_STEP,\n  questionType: STEP.NO_RESULTS_STEP,\n  answers: {},\n};\n\n/**\n * Default result step if none is defined\n */\nconst SUMMARY_STEP: IQuestion = {\n  id: STEP.SUMMARY_STEP,\n  sectionId: STEP.RESULTS_STEP,\n  questionText: STEP.SUMMARY_STEP,\n  questionType: STEP.SUMMARY_STEP,\n  answers: {},\n};\n\nconst DEFAULT_STEPS = {\n  LANDING_STEP,\n  NO_RESULT_STEP,\n  RESULT_STEP,\n  SUMMARY_STEP,\n};\n\n/**\n * Ensures that all required steps are defined\n * @param questions\n */\nexport const validateSteps = (questions: IQuestion[]): void => {\n  // NOTE: the following default assignment logic is not yet factored out.\n  // This could be abstracted if repitions of this pattern emerge.\n\n  const error = 'step is not correctly defined or defined more than once';\n\n  // Ensure the wizard has an intro step at the beginning\n  if (questions[0].questionType !== STEP.LANDING_STEP) {\n    questions.unshift(DEFAULT_STEPS.LANDING_STEP);\n  }\n  if (\n    questions.filter((q) => q.questionType === STEP.LANDING_STEP).length !== 1\n  ) {\n    throw new Error(`${STEP.LANDING_STEP} ${error}.`);\n  }\n\n  // Ensure the wizard has a no results step at the end\n  if (questions[questions.length - 1].questionType !== STEP.NO_RESULTS_STEP) {\n    // No results is last\n    questions.push(DEFAULT_STEPS.NO_RESULT_STEP);\n  }\n  if (\n    questions.filter((q) => q.questionType === STEP.NO_RESULTS_STEP).length\n    !== 1\n  ) {\n    throw new Error(`${STEP.RESULTS_STEP} ${error}.`);\n  }\n\n  // Ensure the wizard has a result step before the end\n  if (questions[questions.length - 2].questionType !== STEP.RESULTS_STEP) {\n    // Create wizard's final step as the default step\n    questions.splice(questions.length - 2, 0, DEFAULT_STEPS.NO_RESULT_STEP);\n  }\n  if (\n    questions.filter((q) => q.questionType === STEP.RESULTS_STEP).length !== 1\n  ) {\n    throw new Error(`${STEP.RESULTS_STEP} ${error}.`);\n  }\n\n  // Ensure the wizard has a summary step before results\n  if (questions[questions.length - 3].questionType !== STEP.SUMMARY_STEP) {\n    // Create wizard's summary step as the default step\n    questions.splice(questions.length - 3, 0, DEFAULT_STEPS.SUMMARY_STEP);\n  }\n  if (\n    questions.filter((q) => q.questionType === STEP.SUMMARY_STEP).length !== 1\n  ) {\n    throw new Error(`${STEP.SUMMARY_STEP} ${error}.`);\n  }\n};\n","import {\n  DIRECTION,\n  PROGRESS_BAR_STATUS,\n  STEP,\n  TAge,\n  TAgeCalc,\n  TAnswers,\n} from '../core';\nimport { Answer } from './Answer';\nimport { validateSteps } from './DefaultSteps';\nimport { IAction } from './IAction';\nimport { IAnswer } from './IAnswer';\nimport { IQuestion } from './IQuestion';\nimport { IRequirement } from './IRequirement';\nimport { IResult } from './IResult';\nimport { ISection } from './ISection';\nimport { IPrepStep, IStep } from './IStep';\n\n/**\n * Definition for survey data input\n */\nexport interface IQuestionnaire {\n  readonly actions: IAction[];\n  readonly header: string;\n  readonly questions: IQuestion[];\n  readonly results: IResult[];\n  readonly sections: ISection[];\n}\n\n/**\n * Utility wrapper for survey state\n */\nexport class Questionnaire implements IQuestionnaire {\n  readonly questions!: IQuestion[];\n\n  readonly header!: string;\n\n  readonly results!: IResult[];\n\n  readonly flow: string[];\n\n  readonly sections!: ISection[];\n\n  readonly actions!: IAction[];\n\n  constructor(data: IQuestionnaire) {\n    Object.assign(this, data);\n\n    this.init();\n\n    // Wizard flow is defined as linear sequence of unique ids\n    this.flow = this.questions.map((q) => q.id);\n\n    // Naive duplication check\n    // TODO: make this more robust and report only the dupes\n    const unique: string[] = this.flow.filter((v, i, a) => a.indexOf(v) === i);\n    if (unique.length !== this.flow.length) {\n      throw new Error(\n        `Questionnaire data contains duplicate questions: \"${unique.join(\n          ',',\n        )}\"`,\n      );\n    }\n  }\n\n  /**\n   * Fetches a question by its id\n   * @param id unique identifier of the question\n   * @returns\n   */\n  getQuestionById(id: string): IQuestion {\n    const ret = this.questions.find((q) => q.id === id);\n    if (!ret) throw new Error(`Step id: ${id} not found in survery`);\n    return ret;\n  }\n\n  /**\n   * Returns the next step in the sequence which is permitted by the current state of the form\n   */\n  getStep(thisStep: string, form: IAnswer, direction: DIRECTION): string {\n    const nextStep = this.flow.indexOf(thisStep) !== -1\n      ? this.flow[this.flow.indexOf(thisStep) + direction]\n      : undefined;\n    // If there are no more steps, stay on current\n    if (!nextStep) return thisStep;\n\n    // Special handling for results\n    if (nextStep === STEP.RESULTS_STEP && this.getResults(form).length === 0) {\n      return STEP.NO_RESULTS_STEP;\n    }\n    if (nextStep === STEP.NO_RESULTS_STEP && this.getResults(form).length > 0) {\n      return STEP.RESULTS_STEP;\n    }\n\n    const nextQuestion = this.getQuestionById(nextStep);\n\n    if (!nextQuestion?.requirements) {\n      return nextStep;\n    }\n\n    // match is a tri-state (undefined === unset)\n    let match: boolean | undefined;\n    // Each requirement is joined by `OR`\n    nextQuestion.requirements.forEach((r) => {\n      // This safely handles cases where requirement parameters are undefined\n      const next = this.meetsAllRequirements(r, form);\n\n      if (match === undefined) {\n        match = next;\n      } else {\n        match = match || next;\n      }\n    });\n\n    // If the requested step meets all requirements, return it\n    if (match) {\n      return nextStep;\n    }\n    // Get the next step whose requirements are met\n    const n = this.getStep(nextStep, form, direction);\n    if (n !== nextStep) {\n      return n;\n    }\n    return thisStep;\n  }\n\n  getNextStep(props: IStep): string {\n    const thisStep = props.step as string;\n    return this.getStep(thisStep, props.form, DIRECTION.forward);\n  }\n\n  getPreviousStep(props: IStep): string {\n    const thisStep = props.step as string;\n    return this.getStep(thisStep, props.form, DIRECTION.backward);\n  }\n\n  /**\n   * Gets all of the current available sections\n   * @param props\n   * @returns\n   */\n  getSections(props: IPrepStep): ISection[] {\n    if (!props) {\n      return [];\n    }\n\n    // Get all sections that meet the requirements based on current answers\n    const sections = this.sections.filter((s) =>\n      s.requirements.some((r) => this.meetsAllRequirements(r, props.form)));\n\n    const thisStep = props.step as string;\n    const thisQuestion = this.getQuestionById(thisStep);\n    const thisQuestionIdx = this.questions.indexOf(thisQuestion);\n\n    return sections.map((s) => {\n      const section = { ...s };\n      section.lastStep = this.questions.reduce(\n        (acc, q, index) => (q.sectionId === s.id ? index : acc),\n        -1,\n      );\n      if (section.id === thisQuestion.sectionId) {\n        section.status = PROGRESS_BAR_STATUS.current;\n      }\n      if (section.lastStep < thisQuestionIdx) {\n        section.status = PROGRESS_BAR_STATUS.complete;\n      }\n      return section;\n    });\n  }\n\n  /**\n   * Determines whether the user should be allowed to continue\n   * @param props\n   * @returns\n   */\n  static isNextEnabled(props: IStep): boolean {\n    if (!props) throw new Error('This survery is not defined');\n\n    if (props.step === STEP.LANDING_STEP) return true;\n\n    if (props.step === STEP.SUMMARY_STEP) return true;\n\n    if (!props.form) return false;\n    // KLUDGE Alert: this is not an elegant way to solve this\n    if (props.question.questionType === 'DoB') {\n      return undefined !== props.form?.age?.years && props.form.age.years >= 0;\n    }\n    return Answer.isValid(props.form, props.question.id);\n  }\n\n  /**\n   * Get all the results compatible with the current answers of the form\n   * @param form\n   * @returns\n   */\n  getResults(form: IAnswer): IResult[] {\n    return this.results.filter((r) =>\n      r.requirements.some((match) => {\n        if (this.meetsAllRequirements(match, form)) {\n          Object.assign(r, { match });\n          return true;\n        }\n        return false;\n      }));\n  }\n\n  /**\n   * Get a randomized action\n   * @returns\n   */\n  getAction(): IAction {\n    const idx = Math.floor(Math.random() * 3);\n    return this.actions[idx];\n  }\n\n  /**\n   * Performs constructor validation on the survery inputs.\n   * Sets step defaults for landing, summary and result if none are defined.\n   */\n  private init() {\n    if (this.questions?.length <= 0) {\n      throw new Error('No questions have been defined.');\n    }\n    if (this.header?.length <= 0) {\n      throw new Error('No header has been defined.');\n    }\n    if (this.results?.length <= 0) {\n      throw new Error('No results have been defined.');\n    }\n    validateSteps(this.questions);\n  }\n\n  private meetsAllRequirements(requirement: IRequirement, form: IAnswer) {\n    const {\n      minAge, maxAge, answers, ageCalc,\n    } = requirement;\n    // Internal to each requirement, all evaluations are `AND`\n    // This safely handles cases where requirement parameters are undefined\n    return (\n      Questionnaire.meetsMinAgeRequirements(form, minAge)\n      && Questionnaire.meetsMaxAgeRequirements(form, maxAge)\n      && Questionnaire.meetsAgeCalcRequirements(form, ageCalc)\n      && this.meetsAnswerRequirements(answers)\n    );\n  }\n\n  /**\n   * Validates minimum age requirements\n   * @param form The current state of the form\n   * @param minAge a TAge object or undefined\n   * @returns true if no min age, else true if age is >= min age\n   */\n  private static meetsMinAgeRequirements(\n    form: IAnswer,\n    minAge?: TAge,\n  ): boolean {\n    if (!minAge) return true;\n\n    if (form.age === undefined) {\n      return false;\n    }\n    const {\n      age: { years, months },\n    } = form;\n\n    return (\n      years > minAge?.years\n      || (years >= minAge?.years && months >= minAge?.months)\n    );\n  }\n\n  /**\n   * Validates maximum age requirements\n   * @param form The current state of the form\n   * @param maxAge a TAge object or undefined\n   * @returns true if no max age, else true if age is <= max age\n   */\n  private static meetsMaxAgeRequirements(\n    form: IAnswer,\n    maxAge?: TAge,\n  ): boolean {\n    if (!maxAge) return true;\n    if (form.age === undefined) {\n      return false;\n    }\n    const {\n      age: { years, months },\n    } = form;\n\n    return (\n      years < maxAge?.years\n      || (years <= maxAge?.years && months <= maxAge?.months)\n    );\n  }\n\n  /**\n   * Executes an arbitrary function to determine age eligibility\n   * @param form The current state of the form\n   * @param ageCalc A callback function that operates on an age\n   * @returns\n   */\n  private static meetsAgeCalcRequirements(\n    form: IAnswer,\n    ageCalc?: TAgeCalc,\n  ): boolean {\n    if (!ageCalc) return true;\n    if (form.birthdate === undefined) {\n      return false;\n    }\n    const { birthdate } = form;\n\n    return ageCalc(birthdate);\n  }\n\n  /**\n   * Determines if current answers in the form meet the step's requirements\n   * @param answers Collection of required answer matches\n   * @returns true if all answers are valid or if no answers are required\n   */\n  private meetsAnswerRequirements(answers?: TAnswers): boolean {\n    if (!answers) return true;\n\n    return Object.keys(answers).every((a) => {\n      const question = this.getQuestionById(a);\n      if (Object.keys(question.answers)?.length > 0) {\n        // Allowed answers are an array. Any matched answer makes the response valid.\n        return answers[a].some(\n          (i) =>\n            question.answer !== undefined\n            && question.answer === question.answers[i],\n        );\n      }\n      // If no answers are defined, this passes\n      return true;\n    });\n  }\n}\n","import { getDateTime, getDateTimeAge } from '../../core/date';\n\n/**\n * Custom SSA calculator to compute Full Retirement Age (FRA)\n * @param dob Date of Birth as a string\n * @param monthOffset optional number of months to adjust calculation\n * @returns true if the given date is FRA as of now\n */\nexport const isFraCalculator = (dob: string, monthOffset = 0): boolean => {\n  const dateOfBirth = getDateTime(dob);\n  if (!dateOfBirth) return false;\n\n  let fra = dateOfBirth;\n  // If the birthday is on the 1st of the month, FRA is calculated from the previous month\n  // NOTE: if on 01/01, this will roll birthday back to the previous year\n  if (dateOfBirth.day === 1) {\n    fra = dateOfBirth.minus({ day: 1 });\n  }\n  // Frequently, calculations are in the form of FRA + 12 months or FRA - n months\n  fra = fra.plus({ months: monthOffset });\n\n  const age = getDateTimeAge(fra);\n  if (!age) return false;\n\n  // Anyone 67 or more is always FRA\n  if (age.years >= 67) {\n    return true;\n  }\n\n  // No one has an FRA before 66\n  if (age.years < 66) {\n    return false;\n  }\n\n  // Everyone born on or before 1954 retires at 66\n  if (fra.year <= 1954) {\n    return age.years >= 66;\n  }\n\n  // Everyone born after 1960 retires at 67\n  if (fra.year >= 1960) {\n    return age.years >= 67;\n  }\n\n  // The edge cases for FRA for 2021\n  // In 2022, the 1955 case will drop; in 2023, the 1956, etc.\n  switch (fra.year) {\n    case 1955:\n      return age.years === 66 && age.months >= 2;\n    case 1956:\n      return age.years === 66 && age.months >= 4;\n    case 1957:\n      return age.years === 66 && age.months >= 6;\n    case 1958:\n      return age.years === 66 && age.months >= 8;\n    case 1959:\n      return age.years === 66 && age.months >= 10;\n    default:\n      throw new Error(`Year ${fra.year} is not valid`);\n  }\n};\n","/*\n  eslint-disable max-len,\n                sonarjs/no-duplicate-string,\n */\nimport { ACTION, STEP } from '../../core';\nimport { IAction } from '../../survey/IAction';\nimport { IQuestion } from '../../survey/IQuestion';\nimport { IResult } from '../../survey/IResult';\nimport { ISection } from '../../survey/ISection';\nimport { Questionnaire } from '../../survey/Questionnaire';\nimport { isFraCalculator } from './calculator';\n\n// NOTE: this data will typically come from an external source (e.g API, etc.)\n\nconst header = 'SSA Benefits Guide';\n\n/**\n * All of the questions, their answers and dependencies\n */\nconst questions: IQuestion[] = [\n  {\n    id: STEP.LANDING_STEP,\n    questionType: STEP.LANDING_STEP,\n    questionText: 'Check eligibility for benefits',\n    // supportingDetails: `By completing this workflow, we will determine what benefits you may be eligible for.`,\n    // questionHelp: `This guide does not guarantee you will receive these benefits, but it will direct you to the resources required for those benefits which may apply to you. Remember that benefit eligibility changes as your life and circumstances change, so check again in the future as you may become eligible for more benfits then than you are now.`,\n    answers: {},\n    sectionId: STEP.LANDING_STEP,\n  },\n  {\n    id: 'A',\n    questionType: 'multipleChoice',\n    questionText: 'Who do you want to check eligibility for?',\n    answers: {\n      0: 'An adult (age 18 and over)',\n      1: 'A child (under age 18)',\n    },\n    supportingDetails:\n      'To check eligibility for someone else, answer the questions based on their situation.',\n    sectionId: 'introduction',\n    eligibilityNote: 'Anyone',\n  },\n  {\n    id: 'B',\n    questionType: 'DoB',\n    questionText: 'Enter your birthday.',\n    supportingDetails:\n      \"Most Social Security benefits have age requirements, so we'll use your birthday to see how old you are.\",\n    sectionId: 'introduction',\n    eligibilityNote: 'Adults age 18 and over',\n    answers: {},\n    requirements: [\n      {\n        answers: {\n          A: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'C',\n    questionType: 'multipleChoice',\n    questionText: 'Do you attend high school full time?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    sectionId: 'a0_work',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          A: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'D',\n    questionType: 'multipleChoice',\n    questionText: 'Have you ever had a job in the United States?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      \"When you work, part of your paycheck goes into Social Security. That's why your work history is a primary consideration.\",\n    sectionId: 'a0_work',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          A: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'E',\n    questionType: 'multipleChoice',\n    questionText:\n      \"Think about the jobs you've had in the past. Have you worked for a total of 10 years or more?\",\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      \"How long you've worked is also important. Ten years is often the magic number that's required.\",\n    sectionId: 'a0_work',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        minAge: {\n          years: 61,\n          months: 8,\n        },\n        answers: {\n          D: [0], // Has worked at all\n        },\n      },\n    ],\n  },\n  {\n    id: 'F',\n    questionType: 'multipleChoice',\n    questionText:\n      'Do you have a condition, illness, or injury that limits the type of work you can do, or prevents you from working altogether? ',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      'If your answer is \"Yes\", you may have heard doctors, social workers, and others say you have a disability.',\n    sectionId: 'a0_work',\n    eligibilityNote: 'Adults age 18 and over, but below FRA + 12 months',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        // The customer must be younger than FRA + 12 months\n        ageCalc: (birthday) => !isFraCalculator(birthday, 12),\n        answers: {},\n      },\n    ],\n  },\n  {\n    id: 'G',\n    questionType: 'multipleChoice',\n    questionText:\n      'Do you expect the condition, illness, or injury to affect your ability to work for a year or more, or be terminal?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      'Social Security benefits are there for you when your work is impacted for a long period of time.',\n    sectionId: 'a0_work',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          F: [0], // Is disabled and younger than FRA + 12\n        },\n      },\n    ],\n  },\n  {\n    id: 'H',\n    questionType: 'multipleChoice',\n    questionText:\n      'When did the condition, illness, or injury start to affect your daily activities and ability to work?',\n    answers: {\n      0: 'Before my 22nd birthday',\n      1: 'After my 22nd birthday',\n    },\n    supportingDetails:\n      'Some benefits consider if it started to affect you when you were a kid, teenager, or young adult.',\n    sectionId: 'a0_work',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        minAge: {\n          years: 22,\n          months: 0,\n        },\n        answers: {\n          G: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'I',\n    questionType: 'multipleChoice',\n    questionText: 'Are you married?',\n    questionHelp:\n      \"You may be eligible for certain benefits if you're legally married now or were in the past.\",\n    answers: {\n      0: 'Yes',\n      1: \"Yes, but I'm separated from my spouse.\",\n      2: 'No, but I was in the past.',\n      3: \"No, I've never been married.\",\n    },\n    supportingDetails:\n      'Long-term partnerships often resemble marriage, but our benefits require legal recognition in your state.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          A: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'J',\n    questionType: 'multipleChoice',\n    questionText: 'Does your spouse get Social Security checks every month?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      'Your own eligibility for certain benefits depends on whether your spouse gets payments right now.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          A: [0],\n          I: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'K',\n    questionType: 'multipleChoice',\n    questionText: 'Did you marry your spouse before you turned 60?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        minAge: {\n          years: 60,\n          months: 0,\n        },\n        answers: {\n          A: [0],\n          J: [1], // Spouse does not get SS\n        },\n      },\n    ],\n  },\n  {\n    id: 'L',\n    questionType: 'multipleChoice',\n    questionText: 'Are you divorced?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      \"You may be eligible for benefits based on a former spouse's work history even though you're no longer connected to them through marriage.\",\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          A: [0],\n          I: [2],\n        },\n      },\n    ],\n  },\n  {\n    id: 'M',\n    questionType: 'multipleChoice',\n    questionText:\n      'Were you married for 10 years or more before you got divorced?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      'How long you were married is an important factor. If you\\'ve gotten divorced more than once, choose \"Yes\" if one of your marriages lasted for 10 years or more.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          L: [0], // Divorced\n        },\n      },\n    ],\n  },\n  {\n    id: 'N',\n    questionType: 'multipleChoice',\n    questionText:\n      'Has your former spouse worked for 10 years or more in the United States?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n      2: \"I don't know\",\n    },\n    supportingDetails:\n      \"How long they've worked is also important. Ten years is often the magic number that's required.\",\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          M: [0], // Married > 10 years before divorce\n        },\n      },\n    ],\n  },\n  {\n    id: 'O',\n    questionType: 'multipleChoice',\n    questionText: 'Are you widowed?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      '\"Widowed\" may not be a term you use to describe yourself. It means that your spouse passed away during your marriage. This may have happened recently or a long time ago.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          K: [1], // Married before 60\n        },\n      },\n      {\n        answers: {\n          L: [1], // Not divorced\n        },\n      },\n      {\n        answers: {\n          M: [1], // Married >= 10 years before divorce\n        },\n      },\n      {\n        answers: {\n          N: [\n            1, // Former spouse worked >= 10 years\n            2, // Former spouse work history unknown\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 'P',\n    questionType: 'multipleChoice',\n    questionText:\n      'Did your spouse ever have a job in the United States before they passed away?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      \"You may be eligible for benefits based on your former spouse's work history.\",\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          O: [0], // Widowed\n        },\n      },\n    ],\n  },\n  {\n    id: 'Q',\n    questionType: 'multipleChoice',\n    questionText: 'Do you have kids who you take care of?',\n    answers: {\n      0: 'Yes, I have kids under the age of 16 who I take care of.',\n      1: 'Yes, I have kids over the age of 16 who I take care of.',\n      2: \"No, I don't have kids who I take care of.\",\n    },\n    questionHelp:\n      'Some benefits consider your role as a birth, adoptive, or step parent.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          A: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'R',\n    questionType: 'multipleChoice',\n    questionText:\n      'Do any of your kids have a condition or illness that significantly affects their daily activities?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      'If your answer is \"Yes\", you may have heard doctors, social workers, and others say they have a disability.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          Q: [\n            0, // Have children < 16\n            1, // Have childred >= 16\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 'S',\n    questionType: 'multipleChoice',\n    questionText:\n      'Have you experienced the loss of a birth, adoptive, or step parent?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      'They may have been your birth, adoptive, or step parent. And, it may have happened recently or a long time ago.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          C: [0], // Attends high school\n        },\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          C: [1], // Does not attend high school\n          G: [0], // Is disabled\n        },\n      },\n      {\n        minAge: {\n          years: 19,\n          months: 0,\n        },\n        answers: {\n          H: [0], // Disabled before 22nd birthday\n        },\n      },\n    ],\n  },\n  {\n    id: 'T',\n    questionType: 'multipleChoice',\n    questionText:\n      \"We're sorry you lost a loved one. Do you have one or multiple surviving parents who take care of you?\",\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      'Choose \"No\" if a grandparent, aunt, uncle, or someone else who isn\\'t your parent takes care of you.',\n    sectionId: 'a0_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          S: [0], // Has lost a parent\n        },\n      },\n    ],\n  },\n  {\n    id: 'U',\n    questionType: 'multipleChoice',\n    questionText:\n      'Do your parent(s) receive Social Security checks every month?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n      2: \"I don't know\",\n    },\n    supportingDetails:\n      'Your own eligibility depends on whether your parent(s) get payments right now.',\n    sectionId: 'a1_family',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          T: [0], // Has surving parent\n        },\n      },\n      {\n        answers: {\n          S: [1], // Has not lost a parent\n        },\n      },\n    ],\n  },\n  {\n    id: 'V',\n    questionType: 'multipleChoice',\n    questionText: 'Are you able to pay for food and a home without difficulty?',\n    answers: {\n      0: \"Yes. I'm able to pay for food and my home without difficulty.\",\n      1: \"No. I make some money, but it's still difficult to pay for food and my home.\",\n      2: \"No. I don't make any money, so it's difficult to pay for food and my home.\",\n    },\n    supportingDetails:\n      \"One of our benefits considers whether it's difficult to cover basic daily needs.\",\n    sectionId: 'a0_finances',\n    eligibilityNote: 'Adults age 18 and over',\n    requirements: [\n      {\n        answers: {\n          A: [0],\n        },\n      },\n    ],\n  },\n  {\n    id: 'W',\n    questionType: 'multipleChoice',\n    questionText:\n      'Does the child have a condition or illness that significantly affects their daily activities?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      'If your answer is \"Yes\", you may have heard doctors, social workers, and others say they have a disability.',\n    sectionId: 'a1_disability',\n    eligibilityNote: 'Children under 18',\n    requirements: [\n      {\n        answers: {\n          A: [1],\n        },\n      },\n    ],\n  },\n  {\n    id: 'X',\n    questionType: 'multipleChoice',\n    questionText:\n      'Do you expect the condition or illness to significantly affect their daily activities for a year or longer, or be terminal?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    sectionId: 'a1_disability',\n    supportingDetails:\n      \"Social Security benefits are there for you when the child's daily activities are affected for a long period of time.\",\n    eligibilityNote: 'Children under 18',\n    requirements: [\n      {\n        answers: {\n          A: [1],\n          W: [0], // Child has disability\n        },\n      },\n    ],\n  },\n  {\n    id: 'Y',\n    questionType: 'multipleChoice',\n    questionText:\n      'Has the child experienced the loss of a birth, adoptive, or step parent?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    questionHelp:\n      'The parent may have been their birth, adoptive, or step parent. And, it may have happened recently or a long time ago.',\n    sectionId: 'a1_family',\n    eligibilityNote: 'Children under 18',\n    requirements: [\n      {\n        answers: {\n          A: [1], // Applying for someone who is <= 18\n        },\n      },\n    ],\n  },\n  {\n    id: 'Z',\n    questionType: 'multipleChoice',\n    questionText:\n      \"We're sorry they've lost a loved one. Do they have one or multiple surviving parents who take care of them?\",\n    answers: {\n      0: 'Yes',\n      1: 'No',\n    },\n    supportingDetails:\n      'We realize you may be the surviving parent if you experienced the loss of your spouse.',\n    sectionId: 'a1_family',\n    eligibilityNote: 'Children under 18',\n    requirements: [\n      {\n        answers: {\n          Y: [0], // Child has lost a parent\n        },\n      },\n    ],\n  },\n  {\n    id: 'AA',\n    questionType: 'multipleChoice',\n    questionText: 'Do their parent(s) get Social Security checks every month?',\n    answers: {\n      0: 'Yes',\n      1: 'No',\n      2: \"I don't know\",\n    },\n    supportingDetails:\n      \"The child's eligibility depends on whether their parent(s) get payments right now.\",\n    sectionId: 'a1_family',\n    eligibilityNote: 'Children under 18',\n    requirements: [\n      {\n        answers: {\n          Z: [0], // Has surviving parent\n        },\n      },\n    ],\n  },\n  {\n    id: 'AB',\n    questionType: 'multipleChoice',\n    questionText:\n      'Are the parent(s) who take care of them able to pay for food and a home without difficulty?',\n    answers: {\n      0: \"Yes, they're able to pay for food and a home without difficulty.\",\n      1: \"No, they make some money but it's difficult for them to pay for food and a home.\",\n      2: \"No, they don't make any money and it's very difficult for them to pay for food and a home.\",\n      3: \"I don't know if it's difficult for them to pay for food and a home.\",\n    },\n    supportingDetails:\n      \"One of our benefits considers whether it's difficult to cover basic daily needs.\",\n    sectionId: 'a1_family',\n    eligibilityNote: 'Children under 18',\n    requirements: [\n      {\n        answers: {\n          AA: [\n            0, // Parents do get SS\n            1, // Parents do not get SS\n            2, // Parents SS status unknown\n          ],\n        },\n      },\n      {\n        answers: {\n          Z: [0], // Has surving parent\n        },\n      },\n    ],\n  },\n  {\n    id: STEP.SUMMARY_STEP,\n    questionType: STEP.SUMMARY_STEP,\n    questionText: 'Review your answers',\n    supportingDetails:\n      'If everything looks correct, click \"Submit\" to view your results; otherwise, go back and change your asnwers as needed.',\n    questionHelp: '',\n    answers: {},\n    sectionId: 'results',\n  },\n  {\n    id: STEP.RESULTS_STEP,\n    questionType: STEP.RESULTS_STEP,\n    questionText: 'You may be eligible for these Social Security benefits',\n    questionHelp:\n      'Each benefit we provide has an official name. You may see these names in other materials or hear our employees use them on the phone and in our offices.',\n    answers: {},\n    sectionId: 'results',\n    footer: `This gives you an idea of what you may be eligible for, but we can't guarantee you'll get these benefits. We'll analyze more details during the application process to provide a definite answer.\n\nThe information you shared today tells us about your current situation. In the future, you may become eligible for other benefits as you age or things in your life change.`,\n  },\n  {\n    id: STEP.NO_RESULTS_STEP,\n    questionType: STEP.NO_RESULTS_STEP,\n    questionText: 'You may be not eligible for any Social Security benefits',\n    supportingDetails: `You can apply for benefits but based on what you told us today, you may not be eligible at this time.\n\nThe information you shared today tells us about your current situation. In the future, you may become eligible for benefits as you age or things in your life change.`,\n    questionHelp: '',\n    answers: {},\n    sectionId: 'results',\n  },\n];\n\n/**\n * All possible results with their requirements\n */\nconst results: IResult[] = [\n  {\n    name: 'Retirement',\n    code: 'RS.00201.001',\n    description: 'Retirement',\n    requirements: [\n      {\n        minAge: {\n          years: 61,\n          months: 8,\n        },\n        answers: {\n          E: [0], // Has worked for >= 10 years\n        },\n        explanation:\n          \"You've worked for 10 years or more and meet our age requirements.\",\n      },\n    ],\n  },\n  {\n    name: 'Disability',\n    code: 'DI.10105.060',\n    description:\n      'Disability, also referred to as Social Security Disability Insurance (SSDI)',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        ageCalc: (birthday) => !isFraCalculator(birthday, 12),\n        answers: {\n          G: [0], // Is between 18 to FRA and is disabled\n        },\n        explanation:\n          'You expect a condition, illness, or injury to affect your ability to work for a year or more.',\n      },\n    ],\n  },\n  {\n    name: 'SSI Benefits',\n    code: 'SI.00501.001',\n    description: 'Supplemental Security Income (SSI)',\n    requirements: [\n      {\n        minAge: {\n          years: 65,\n          months: 0,\n        },\n        answers: {\n          V: [\n            1, // Has trouble paying bills\n            2, // Cannot make ends meet\n          ],\n        },\n        explanation:\n          \"You're 65 or older and said you have difficulty paying for food and a home.\",\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        answers: {\n          G: [0], // Is disabled\n          V: [\n            1, // Has trouble paying bills\n            2, // Cannot make ends meet\n          ],\n        },\n        explanation:\n          'You said you have difficulty paying for food and a home. And, a disability affects your ability to work.',\n      },\n      {\n        answers: {\n          A: [1], // is under 18\n          X: [1], // Is disabled\n        },\n        explanation:\n          \"You expect a condition or illness to significantly affect the child's daily activities for a year or more. And, their parent(s) have difficulty paying for food and a home.\",\n      },\n    ],\n  },\n  {\n    name: 'Medicare',\n    code: 'HI.00801.006 / .191 / .146, HI.00805.005',\n    description: 'Medicare',\n    requirements: [\n      {\n        minAge: {\n          years: 64,\n          months: 0,\n        },\n        maxAge: {\n          years: 65,\n          months: 3,\n        },\n        answers: {},\n        explanation: 'You are between 64 years and 65 years and 3 months old.',\n      },\n    ],\n  },\n  {\n    name: 'Spouse',\n    code: 'RS.00202.001',\n    description: 'Spouse',\n    requirements: [\n      {\n        minAge: {\n          years: 62,\n          months: 0,\n        },\n        answers: {\n          I: [\n            0, // Is married\n            1, // Is married but separated\n          ],\n          J: [0], // Spouse has benefits\n        },\n        explanation:\n          \"You're 62 or older and your spouse gets Social Security checks every month.\",\n      },\n    ],\n  },\n  {\n    name: 'Spouse with Child in Care',\n    code: 'RS.01310.001, RS. 00208.005',\n    description: 'Spouse with Child in Care',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        ageCalc: (birthday) => !isFraCalculator(birthday),\n        answers: {\n          I: [0], // Is married\n          J: [0], // Spouse has benefits\n          Q: [0], // Has children < 16\n          R: [\n            0, // Children are not disabled\n            1, // Children are disabled\n          ],\n        },\n        explanation:\n          'Your spouse gets Social Security checks every month and you take care of kids under the age of 16.',\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        ageCalc: (birthday) => !isFraCalculator(birthday),\n        answers: {\n          I: [0], // Is married\n          J: [0], // Spouse has benefits\n          Q: [1], // Has children >= 16\n          R: [1], // Children are disabled\n        },\n        explanation:\n          'Your spouse gets Social Security checks every month and you take care of disabled kids over the age of 16.',\n      },\n      {\n        minAge: {\n          years: 62,\n          months: 0,\n        },\n        ageCalc: (birthday) => !isFraCalculator(birthday),\n        answers: {\n          I: [2], // Not married, but was in past\n          N: [\n            0, // Divorced after >= 10 years && ex-spouse has benefits\n            2, // Divorced after >= 10 years && unknown if ex-spouse has benefits\n          ],\n          Q: [0], // Has children < 16\n          R: [\n            0, // Children are not disabled\n            1, // Children are disabled\n          ],\n        },\n        explanation:\n          'You were married for 10 years or more in the past and your former spouse worked. And, you take care of kids under the age of 16.',\n      },\n      {\n        minAge: {\n          years: 62,\n          months: 0,\n        },\n        ageCalc: (birthday) => !isFraCalculator(birthday),\n        answers: {\n          I: [2], // Not married, but was in past\n          N: [\n            0, // Divorced after >= 10 years && ex-spouse has benefits\n            2, // Divorced after >= 10 years && unknown if ex-spouse has benefits\n          ],\n          Q: [1], // Has children >= 16\n          R: [1], // Children are disabled\n        },\n        explanation:\n          'You were married for 10 years or more in the past and your former spouse worked. And, you take care of disabled kids over the age of 16.',\n      },\n    ],\n  },\n  {\n    name: 'Divorced spouse',\n    code: 'RS.00202.005',\n    description: 'Divorced Spouse',\n    requirements: [\n      {\n        minAge: {\n          years: 62,\n          months: 0,\n        },\n        answers: {\n          I: [2], // Not married, but was in past\n          N: [\n            0, // Divorced after >= 10 years && ex-spouse has benefits\n            2, // Divorced after >= 10 years && unknown if ex-spouse has benefits\n          ],\n          Q: [0], // Has children < 16\n          R: [\n            0, // Children are not disabled\n            1, // Children are disabled\n          ],\n        },\n        explanation:\n          \"You're 62 or older, were married for 10 years or more in the past, and your former spouse worked.\",\n      },\n    ],\n  },\n  {\n    name: 'Widow(ers) benefits',\n    code: 'RS.00207.001',\n    description: 'Widowers',\n    requirements: [\n      {\n        minAge: {\n          years: 60,\n          months: 0,\n        },\n        answers: {\n          I: [2], // Not married, but was in past\n          O: [0], // Spouse is deceased\n          P: [0], // Deceased spouse worked\n        },\n        explanation:\n          \"You're 60 or older and lost your spouse.  And, your spouse worked before they passed away.\",\n      },\n    ],\n  },\n  {\n    name: 'Disabled widow(ers) benefits',\n    code: 'RS.00207.001',\n    description: 'Disabled Widowers',\n    requirements: [\n      {\n        minAge: {\n          years: 50,\n          months: 0,\n        },\n        maxAge: {\n          years: 59,\n          months: 11,\n        },\n        answers: {\n          G: [0], // Disabled\n          I: [2], // Not married, but was in past\n          O: [0], // Spouse is deceased\n          P: [0], // Deceased spouse worked\n        },\n        explanation:\n          \"You're between the ages of 50 and 60 and lost your spouse. And, you expect a condition, illness, or injury to affect your ability to work for a year or more.\",\n      },\n    ],\n  },\n  {\n    name: 'Lump sum death payment',\n    code: 'RS.00210.001',\n    description: 'Lump Sum Death Payment, a one-time payment',\n    requirements: [\n      {\n        answers: {\n          A: [1], // Childer under 18\n          Y: [0], // Child has experienced loss of parent\n        },\n        explanation: 'The child lost a parent.',\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        answers: {\n          O: [0], // Spouse is deceased\n          P: [0], // Deceased spouse worked\n        },\n        explanation: 'You lost your spouse.',\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        answers: {\n          S: [0], // Has lost a parent\n        },\n        explanation: 'You lost a parent.',\n      },\n    ],\n  },\n  {\n    name: \"Child's benefits (Auxiliary)\",\n    code: 'RS.00203.001',\n    description: \"Child's Auxiliary\",\n    requirements: [\n      {\n        answers: {\n          A: [1], // Child under 18\n          AA: [\n            0, // Parents receive SS\n            2, // Unknown if parents receive SS\n          ],\n        },\n        explanation:\n          \"The child's parent(s) may get Social Security checks every month.\",\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          C: [1], // Is in high school\n          U: [\n            0, // Parents receive SS\n            2, // Unknown if parents receive SS\n          ],\n        },\n        explanation:\n          'You go to high school full time and your parent(s) may get Social Security checks every month.',\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        answers: {\n          G: [0], // Disabled\n          H: [0], // Disabled before 22\n          U: [\n            0, // Parents receive SS\n            2, // Unknown if parents receive SS\n          ],\n        },\n        explanation:\n          'You expect a condition, illness, or injury to affect your ability to work for a year or more. And it started to affect you before your 22nd birthday. Your parent(s) may get Social Security checks every month.',\n      },\n    ],\n  },\n  {\n    name: \"Child's benefits (Survivor)\",\n    code: 'RS.00203.001',\n    description: \"Child's Survivor\",\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          C: [1], // Is in high school\n          S: [0], // Has lost a parent\n        },\n        explanation: 'The child lost a parent.',\n      },\n      {\n        answers: {\n          A: [1], // Child under 18\n          Y: [0], // Child has experienced loss of parent\n        },\n        explanation: 'The child lost a parent.',\n      },\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        answers: {\n          G: [0], // Disabled\n          H: [0], // Disabled before 22\n          S: [0], // Has lost a parent\n        },\n        explanation:\n          'You expect a condition, illness, or injury to affect your ability to work for a year or more. And it started to affect you before your 22nd birthday. You also lost a parent.',\n      },\n    ],\n  },\n  {\n    name: 'Childhood disability benefit',\n    code: 'DI.10115.001',\n    description: 'Childhood Disability',\n    requirements: [\n      {\n        answers: {\n          A: [1], // Child under 18\n          X: [0], // Child is disabled\n        },\n        explanation:\n          \"A condition or illness is expected to significantly affect the child's daily activities for a year or more.\",\n      },\n    ],\n  },\n  {\n    name: 'Student benefits (Auxilary)',\n    code: 'RS.00205.001',\n    description: 'Student Auxiliary',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          C: [1], // Is in high school\n          U: [\n            0, // Parents receive SS\n            2, // Unknown if parents receive SS\n          ],\n        },\n        explanation:\n          'You go to high school full time and your parent(s) may get Social Security checks every month.',\n      },\n    ],\n  },\n  {\n    name: 'Student benefits (Survivor)',\n    code: 'RS.00205.001',\n    description: 'Student Survivor',\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        maxAge: {\n          years: 19,\n          months: 1,\n        },\n        answers: {\n          C: [1], // Is in high school\n          S: [0], // Has lost a parent\n        },\n        explanation: 'You go to high school full time and lost a parent.',\n      },\n    ],\n  },\n  {\n    name: \"Mother/Father's benefits\",\n    code: 'RS.00208.001',\n    description: \"Mothers and Father's\",\n    requirements: [\n      {\n        minAge: {\n          years: 18,\n          months: 0,\n        },\n        answers: {\n          P: [0], // Spouse is deceased and worked\n          Q: [0], // Has children < 16\n        },\n        explanation:\n          'You lost your spouse and they worked before they passed away. And, you take care of disabled kids over the age of 16.',\n      },\n    ],\n  },\n];\n\nconst actions: IAction[] = [\n  {\n    name: 'Apply Online',\n    description:\n      'Answer more questions and upload documents to apply for the benefits you may be eligible for.',\n    type: ACTION.online,\n    action: 'Start application',\n  },\n  {\n    name: 'Technician Assisted',\n    description:\n      \"Call us to schedule an appointment to apply for the benefits you may be eligible for. When it's time for your appointment, we'll call you to complete your application over the phone.\",\n    type: ACTION.call,\n    action: 'Call 1-800-772-1213 to schedule an appointment',\n  },\n  {\n    name: 'Apply Online & Technician Assisted',\n    description:\n      \"Answer more questions and upload documents to apply for the benefits you may be eligible for. After you submit the application here on the website, we'll call you to get more information and finalize your application.\",\n    type: ACTION.hybrid,\n    action: 'Start application',\n  },\n];\n\nconst sections: ISection[] = [\n  {\n    id: 'introduction',\n    name: 'Introduction',\n    requirements: [\n      {\n        answers: {\n          A: [0, 1], // All\n        },\n      },\n    ],\n  },\n  {\n    id: 'a0_work',\n    name: 'Work',\n    requirements: [\n      {\n        answers: {\n          A: [0], // Only for adults\n        },\n      },\n    ],\n  },\n  {\n    id: 'a0_family',\n    name: 'Family',\n    requirements: [\n      {\n        answers: {\n          A: [0], // Adults\n        },\n      },\n    ],\n  },\n  {\n    id: 'a0_finances',\n    name: 'Finances',\n    requirements: [\n      {\n        answers: {\n          A: [0], // Only for adults\n        },\n      },\n    ],\n  },\n  {\n    id: 'a1_disability',\n    name: 'Disability',\n    requirements: [\n      {\n        answers: {\n          A: [1], // < 18\n        },\n      },\n    ],\n  },\n  {\n    id: 'a1_family',\n    name: 'Family',\n    requirements: [\n      {\n        answers: {\n          A: [1], // < 18\n        },\n      },\n    ],\n  },\n  {\n    id: 'results',\n    name: 'Results',\n    requirements: [\n      {\n        answers: {\n          A: [0, 1], // All ages\n        },\n      },\n    ],\n  },\n];\n\nexport const questionnaire = new Questionnaire({\n  questions,\n  actions,\n  header,\n  sections,\n  results,\n});\n","import { merge } from 'lodash';\nimport { TActionType } from '../core';\nimport { Answer } from '../survey/Answer';\nimport { IAnswer } from '../survey/IAnswer';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TReducer = (...params: any) => void;\n\nexport const formReducer = (\n  previousState: IAnswer,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: { type: TActionType; value: any },\n): IAnswer => {\n  switch (action.type) {\n    case 'RESET':\n      return new Answer();\n\n    case 'UPDATE':\n      return merge(\n        {\n          ...previousState,\n        },\n        {\n          ...action.value,\n        },\n      );\n\n    default:\n      return previousState;\n  }\n};\n","import { Button } from '@trussworks/react-uswds';\nimport { STEP } from '../core';\nimport { questionnaire } from '../flows/ssa_eligibility/questionnaire';\nimport { IStep } from '../survey/IStep';\nimport { Questionnaire } from '../survey/Questionnaire';\n\n/**\n * Generates the Previous/Next buttons for Wizard navigation\n * @param props\n * @returns\n */\nexport const WizardNavbar = (props: IStep): JSX.Element => {\n  // We can go back only once past the Landing step and the first actual step.\n  // Once past Summary, back is disabled\n  const showPrevStep = props.step !== STEP.LANDING_STEP\n    && props.step !== STEP.RESULTS_STEP\n    && props.step !== STEP.NO_RESULTS_STEP\n    && props.step !== questionnaire.flow[1];\n  // Results will be the last step; nothing follows\n  const showNextStep = props.step !== STEP.RESULTS_STEP\n    && props.step !== STEP.NO_RESULTS_STEP;\n\n  const backLabel = 'Previous';\n  // TODO: update this logic to be generic see: https://github.com/usds/ssa-eligibility/issues/57\n  let nextLabel = '';\n  switch (props.step) {\n    case STEP.LANDING_STEP:\n      nextLabel = 'Get Started';\n      break;\n    case STEP.SUMMARY_STEP:\n      nextLabel = 'Submit';\n      break;\n    default:\n      nextLabel = 'Next';\n      break;\n  }\n\n  const goToStep = (step: string) => props.wizard.goToStep(step);\n\n  const next = () => goToStep(questionnaire.getNextStep(props));\n\n  const prev = () => goToStep(questionnaire.getPreviousStep(props));\n\n  const disabled = () => !Questionnaire.isNextEnabled(props);\n\n  return (\n    <nav className=\"wizard-layout__navbar\">\n      {/* Previous step */}\n      {showPrevStep && (\n        <Button\n          type=\"button\"\n          outline\n          onClick={prev}\n          data-testid={`prev-button-${props.step}`}\n        >\n          {backLabel}\n        </Button>\n      )}\n      {!showPrevStep && <div></div>}\n\n      {/* Forward step */}\n      {showNextStep && (\n        <Button\n          type=\"button\"\n          onClick={next}\n          disabled={disabled()}\n          data-testid={`next-button-${props.step}`}\n        >\n          {nextLabel}\n        </Button>\n      )}\n      {!showNextStep && <div></div>}\n    </nav>\n  );\n};\n","import {\n  Card, CardBody, CardFooter, CardGroup, CardHeader,\n} from '@trussworks/react-uswds';\nimport { SHOW_STEPS } from '../core';\nimport { IStep } from '../survey';\nimport { WizardNavbar } from './WizardNavbar';\n\n/**\n * Generates the Card layout for each step's contents\n * @param props\n * @returns\n */\nexport const StepLayout = (props: IStep): JSX.Element => {\n  const getHeader = () => {\n    let text = props.question.questionText;\n    if (!text) return <></>;\n\n    if (SHOW_STEPS) {\n      text = `${props.question.id}: ${text}`;\n    }\n    return <h3 className=\"usa-card__heading\">{text}</h3>;\n  };\n\n  const getSupportingDetails = () => {\n    const text = props.question.supportingDetails;\n    if (!text) return <></>;\n    return <p className=\"font-sans-6\">{text}</p>;\n  };\n\n  const getQuestionHelp = () => {\n    const text = props.question.questionHelp;\n    if (!text) return <></>;\n    return <p className=\"font-sans-6\">{text}</p>;\n  };\n\n  const getFooter = () => {\n    const text = props.question.footer;\n    if (!text) return <></>;\n    return <p className=\"font-sans-6\">{text}</p>;\n  };\n\n  return (\n    <div>\n      <section>\n        <CardGroup>\n          <Card\n            headerFirst\n            gridLayout={{ tablet: { col: 12 } }}\n            containerProps={{ className: 'border-ink' }}\n          >\n            <CardHeader className=\"bg-base-lightest\">\n              {getHeader()}\n              {getSupportingDetails()}\n              {getQuestionHelp()}\n            </CardHeader>\n            <CardBody className=\"padding-top-3\">{props.children}</CardBody>\n            <CardFooter>\n              {getFooter()}\n            </CardFooter>\n          </Card>\n        </CardGroup>\n      </section>\n      <WizardNavbar {...props} />\n    </div>\n  );\n};\n","import { DateInput, DateInputGroup } from '@trussworks/react-uswds';\nimport { kebabCase } from 'lodash';\nimport { DateTime } from 'luxon';\nimport { ChangeEvent } from 'react';\nimport { getAge, getDateTime } from '../../core/date';\nimport { IStep } from '../../survey/IStep';\nimport { StepLayout } from '../StepLayout';\n\nexport const DateOfBirth = (props: IStep): JSX.Element => {\n  const { question } = props;\n  if (!question) {\n    return <></>;\n  }\n\n  type TDobProp = 'month' | 'day' | 'year';\n\n  const getBirthdate = (): DateTime | undefined => {\n    if (props.form.birthdate) {\n      return getDateTime(props.form.birthdate);\n    }\n    return undefined;\n  };\n\n  const defaultValue = (unit: TDobProp): string | undefined => {\n    const dt = getBirthdate();\n    if (!dt) {\n      return undefined;\n    }\n    switch (unit) {\n      case 'month':\n        return `${dt.month}`.padStart(2, '0');\n      case 'day':\n        return `${dt.day}`.padStart(2, '0');\n      case 'year':\n        return `${dt.year}`;\n      default:\n        throw new Error(`Unit ${unit} is not valid`);\n    }\n  };\n\n  // Internal state for assembling DoB from individual inputs\n  const dob: {\n    month?: string;\n    day?: string;\n    year?: string;\n    toBirthdate: () => string | undefined;\n  } = {\n    month: getBirthdate()?.month?.toString(),\n    day: getBirthdate()?.day?.toString(),\n    year: getBirthdate()?.year?.toString(),\n    toBirthdate: () => {\n      if (dob.month && dob.day && dob.year) {\n        return `${dob.month.padStart(2, '0')}/${dob.day.padStart(2, '0')}/${\n          dob.year\n        }`;\n      }\n      return undefined;\n    },\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>, prop: TDobProp) => {\n    const val = e.target.value;\n    if (!val) {\n      return;\n    }\n    dob[prop] = val;\n    const bd = dob.toBirthdate();\n    const age = getAge(bd);\n    if (age) {\n      props.dispatchForm({\n        type: 'UPDATE',\n        value: {\n          birthdate: bd,\n          age,\n        },\n      });\n    }\n  };\n\n  const getFieldSetName = () => kebabCase(props.question.questionText);\n\n  const getDomId = (prop: TDobProp) => {\n    const name = getFieldSetName();\n    return `${name}-${kebabCase(prop)}`;\n  };\n\n  return (\n    <StepLayout {...props}>\n      <DateInputGroup>\n        <DateInput\n          id={getDomId('month')}\n          name=\"date_of_birth\"\n          label=\"Month\"\n          unit=\"month\"\n          maxLength={2}\n          minLength={2}\n          defaultValue={defaultValue('month')}\n          onChange={(e) => onChange(e, 'month')}\n        />\n        <DateInput\n          id={getDomId('day')}\n          name=\"date_of_birth\"\n          label=\"Day\"\n          unit=\"day\"\n          maxLength={2}\n          minLength={2}\n          defaultValue={defaultValue('day')}\n          onChange={(e) => onChange(e, 'day')}\n        />\n        <DateInput\n          id={getDomId('year')}\n          name=\"date_of_birth\"\n          label=\"Year\"\n          unit=\"year\"\n          maxLength={4}\n          minLength={4}\n          defaultValue={defaultValue('year')}\n          onChange={(e) => onChange(e, 'year')}\n        />\n      </DateInputGroup>\n    </StepLayout>\n  );\n};\n","import { IStep } from '../../survey/IStep';\nimport { StepLayout } from '../StepLayout';\n\n/**\n * Generates the first page of the Wizard, \"aka Landing\"\n * @param props\n * @returns\n */\nexport const Landing = (props: IStep): JSX.Element => {\n  const { question } = props;\n  if (!question) {\n    return <></>;\n  }\n\n  return (\n    <StepLayout {...props}>\n      {/* TODO: update this logic. See: https://github.com/usds/ssa-eligibility/issues/57 */}\n      <p>\n        To receive Social Security benefits, you have to meet certain\n        requirements. We&rsquo;ll guide you through a series of questions to\n        determine if you may be eligible.\n      </p>\n    </StepLayout>\n  );\n};\n","import { Fieldset, Radio } from '@trussworks/react-uswds';\nimport { kebabCase } from 'lodash';\nimport { ReactNode } from 'react';\nimport { Answer } from '../../survey/Answer';\nimport { IStep } from '../../survey/IStep';\nimport { StepLayout } from '../StepLayout';\n\nconst updateForm = (answer: string, props: IStep): void => {\n  Object.assign(props.question, { answer });\n  const value = {\n    answers: {\n      [props.question.id]: props.question,\n    },\n  };\n  return props.dispatchForm({\n    type: 'UPDATE',\n    value,\n  });\n};\n\nconst getSelected = (answer: string, props: IStep): boolean | undefined => {\n  if (!props || !props.form) return undefined;\n  return Answer.isSelected(props.form, props.question.id, answer);\n};\n\nconst getFieldSetName = (props: IStep): string => kebabCase(props.question.questionText);\n\nconst getDomId = (answer: string, props: IStep): string => {\n  const name = getFieldSetName(props);\n  return `${name}-${kebabCase(answer)}`;\n};\n\nconst getRadio = (answer: string, props: IStep): ReactNode => {\n  const handler = () => updateForm(answer, props);\n  const id = getDomId(answer, props);\n\n  return (\n    <Radio\n      id={id}\n      key={id}\n      name={getFieldSetName(props)}\n      label={answer}\n      value={answer}\n      checked={getSelected(answer, props) === true}\n      className={'multipleChoice'}\n      onChange={handler}\n      onClick={handler}\n    />\n  );\n};\n\nconst getRadios = (props: IStep): ReactNode => {\n  const ret: ReactNode[] = [];\n  Object.keys(props.question.answers).forEach((a) => {\n    ret.push(getRadio(props.question.answers[+a], props));\n  });\n  return ret;\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoice = (props: IStep): JSX.Element => {\n  if (props?.question?.answers === undefined) {\n    return <></>;\n  }\n\n  return (\n    <StepLayout {...props}>\n      <Fieldset\n        legend={props.question.questionText}\n        className=\"multipleChoice\"\n        legendStyle=\"srOnly\"\n      >\n        {getRadios(props)}\n      </Fieldset>\n    </StepLayout>\n  );\n};\n","import { Link, SiteAlert } from '@trussworks/react-uswds';\nimport { questionnaire } from '../../flows/ssa_eligibility/questionnaire';\nimport { IStep } from '../../survey/IStep';\nimport { StepLayout } from '../StepLayout';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const NoResults = (props: IStep): JSX.Element => {\n  const { question } = props;\n  if (!question) {\n    return <></>;\n  }\n\n  const action = questionnaire.getAction();\n\n  return (\n    <StepLayout {...props}>\n      <SiteAlert variant=\"emergency\">\n        <p className=\"usa-alert__text\">\n          <strong>{action.name}</strong>:&nbsp;\n          {action.description}&nbsp;\n          <Link href=\"#\">{action.action}</Link>.\n        </p>\n      </SiteAlert>\n    </StepLayout>\n  );\n};\n","import { Link, SiteAlert, SummaryBox } from '@trussworks/react-uswds';\nimport { ReactNode } from 'react';\nimport { IS_DEV } from '../../core';\nimport { questionnaire } from '../../flows/ssa_eligibility/questionnaire';\nimport { IResult } from '../../survey/IResult';\nimport { IStep } from '../../survey/IStep';\nimport { StepLayout } from '../StepLayout';\n\n/**\n * Internal method to compute reason for a result\n * @param props\n * @param result\n * @returns\n */\nconst getReason = (props: IStep, result: IResult): string => {\n  let reason = result.match?.explanation;\n  if (!reason) {\n    return '';\n  }\n\n  if (IS_DEV && result.match) {\n    reason += '<br><br>';\n    if (\n      result.match.ageCalc !== undefined\n      || result.match.minAge !== undefined\n      || result.match.maxAge !== undefined\n    ) {\n      reason += `You are ${props.form.age?.years} years and ${props.form.age?.months} months old. `;\n    }\n    Object.keys(result.match.answers).forEach((id) => {\n      const q = questionnaire.getQuestionById(id);\n      reason += `You answered \"<b>${q.answer}</b>\" to the question \"<i>${q.questionText}.</i>\" `;\n    });\n  }\n  return reason;\n};\n\n/**\n * Internal method to generate list of results\n * @param props\n * @returns\n */\nconst getResults = (props: IStep): ReactNode =>\n  questionnaire.getResults(props.form).map((result) => (\n    <li key={`${props.step}_${result.code}`} className=\"padding-bottom-2\">\n      <span>\n        Benefit name:&nbsp;&nbsp;\n        <b>{result.description}</b>\n      </span>\n      <div\n        className=\"text-light\"\n        dangerouslySetInnerHTML={{ __html: getReason(props, result) }}\n      />\n    </li>\n  ));\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const Results = (props: IStep): JSX.Element => {\n  const { question } = props;\n  if (!question) {\n    return <></>;\n  }\n\n  const action = questionnaire.getAction();\n\n  return (\n    <StepLayout {...props}>\n      <SummaryBox heading=\"\">\n        <ul\n          className=\"usa-list usa-list--unstyled\"\n          style={{ textAlign: 'left' }}\n        >\n          {getResults(props)}\n        </ul>\n        <SiteAlert variant=\"info\">\n          <p className=\"usa-alert__text\">\n            <strong>{action.name}</strong>:&nbsp;\n            {action.description}&nbsp;\n            <Link href=\"#\">{action.action}</Link>.\n          </p>\n        </SiteAlert>\n      </SummaryBox>\n    </StepLayout>\n  );\n};\n","import { ReactNode } from 'react';\nimport { IStep } from '../../survey/IStep';\nimport { StepLayout } from '../StepLayout';\n\n/**\n * Internal method to generate a list of the survey answers\n * @param props\n * @returns\n */\nconst getAnswers = (props: IStep): ReactNode => {\n  const answers = Object.keys(props.form.answers).map((key) => (\n    <li key={key} className=\"padding-bottom-2\">\n      <span className=\"text-light\">\n        {props.form.answers[key].questionText}:&nbsp;&nbsp;\n        <b>{props.form.answers[key].answer}</b>\n      </span>\n    </li>\n  ));\n\n  return <ul className=\"usa-list usa-list--unstyled\">{answers}</ul>;\n};\n\n/**\n * Displays a summary of the wizard prior to showing results\n * @param props\n * @returns\n */\nexport const Summary = (props: IStep): JSX.Element => {\n  const { question } = props;\n  if (!question) {\n    return <></>;\n  }\n\n  return <StepLayout {...props}>{getAnswers(props)}</StepLayout>;\n};\n","import { STEP } from '../core';\nimport { questionnaire } from '../flows/ssa_eligibility/questionnaire';\nimport { IPrepStep } from '../survey';\nimport {\n  DateOfBirth,\n  Landing,\n  MultipleChoice,\n  NoResults,\n  Results,\n  Summary,\n} from './steps';\n\nexport const StepFactory = (props: IPrepStep): JSX.Element => {\n  const { step } = props;\n  const question = questionnaire.getQuestionById(`${step}`);\n  switch (question.questionType) {\n    case STEP.LANDING_STEP:\n      return <Landing {...{ question, ...props }} />;\n    case 'DoB':\n      return <DateOfBirth {...{ question, ...props }} />;\n    case 'multipleChoice':\n      return <MultipleChoice {...{ question, ...props }} />;\n    case STEP.NO_RESULTS_STEP:\n      return <NoResults {...{ question, ...props }} />;\n    case STEP.RESULTS_STEP:\n      return <Results {...{ question, ...props }} />;\n    case STEP.SUMMARY_STEP:\n      return <Summary {...{ question, ...props }} />;\n    default:\n      return <>Step does not exist</>;\n  }\n};\n","import { Accordion, Button } from '@trussworks/react-uswds';\nimport { IS_DEV } from '../core';\nimport { IPrepStep } from '../survey';\n\nexport const WizardDevPanel = (props: IPrepStep): JSX.Element => {\n  if (!IS_DEV) return <></>;\n\n  const reset = () => {\n    props.dispatchForm({\n      type: 'RESET',\n    });\n    return props.wizard.goToStep('A');\n  };\n\n  return (\n    <>\n      <Accordion\n        items={[\n          {\n            title: 'Temporary developer panel',\n            content: (\n              <pre>\n                <code>{JSON.stringify(props.form, null, 4)}</code>\n              </pre>\n            ),\n            expanded: false,\n            id: 'developer-output',\n          },\n        ]}\n      />\n      <br></br>\n      <nav className=\"wizard-layout__navbar\">\n        <Button type=\"reset\" secondary onClick={reset}>\n          Reset\n        </Button>\n      </nav>\n    </>\n  );\n};\n","import { StepIndicator, StepIndicatorStep } from '@trussworks/react-uswds';\nimport { questionnaire } from '../flows/ssa_eligibility/questionnaire';\nimport { IPrepStep } from '../survey';\nimport { ISection } from '../survey/ISection';\n\nexport const WizardProgressBar = (props: IPrepStep): JSX.Element => {\n  if (!props) {\n    return <></>;\n  }\n\n  const sections = questionnaire.getSections(props);\n  if (sections.length === 0) {\n    return <></>;\n  }\n\n  const getIndicatorStep = (s: ISection) => (\n    <StepIndicatorStep key={s.id} label={s.name} status={s.status} />\n  );\n\n  return (\n    <StepIndicator centered counters=\"small\">\n      {questionnaire.getSections(props).map(getIndicatorStep)}\n    </StepIndicator>\n  );\n};\n","import { Header, Title } from '@trussworks/react-uswds';\nimport { useReducer } from 'react';\nimport { useWizard } from 'use-wizard';\nimport { questionnaire } from '../flows/ssa_eligibility/questionnaire';\nimport { formReducer } from '../state/formReducer';\nimport { Answer } from '../survey/Answer';\nimport { StepFactory } from './StepFactory';\nimport { WizardDevPanel } from './WizardDevPanel';\nimport { WizardProgressBar } from './WizardProgressBar';\n\nexport const EligibilityWizard = (): JSX.Element => {\n  const [step, wizard] = useWizard(questionnaire.flow);\n\n  const results = new Answer();\n  // This is only used to store user inputs\n  const [form, dispatchForm] = useReducer(formReducer, results);\n  return (\n    <>\n      <Header basic>\n        <div className=\"usa-nav-container\">\n          <div className=\"usa-navbar\">\n            <Title id=\"basic-logo\">\n              <a href=\"/\" title=\"Home\" aria-label=\"Home\">\n                {questionnaire.header}\n              </a>\n            </Title>\n          </div>\n        </div>\n      </Header>\n\n      <section>\n        <WizardProgressBar\n          {...{\n            step,\n            wizard,\n            form,\n            dispatchForm,\n          }}\n        ></WizardProgressBar>\n      </section>\n\n      <section className=\"section\">\n        <StepFactory\n          {...{\n            step,\n            wizard,\n            form,\n            dispatchForm,\n          }}\n        />\n      </section>\n\n      <section className=\"section\">\n        <WizardDevPanel\n          {...{\n            step,\n            wizard,\n            form,\n            dispatchForm,\n          }}\n        />\n      </section>\n    </>\n  );\n};\n","import '@trussworks/react-uswds/lib/index.css';\nimport '@trussworks/react-uswds/lib/uswds.css';\nimport { EligibilityWizard } from './components/EligibilityWizard';\n\n/**\n * React application container for the web component\n * @returns\n */\nexport const App = (): JSX.Element => (\n  <div>\n    <EligibilityWizard />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { debug } from './core/debug';\nimport { reportWebVitals } from './core/reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(debug);\n","import { DateTime } from 'luxon';\nimport moment from 'moment';\nimport { TAge } from './types';\n\n/**\n * Determines if a string can be parsed into a valid Date\n * @param dt\n * @returns\n */\nexport const isValidDate = (dt: string | undefined): boolean => {\n  if (!dt || dt.length < 8) return false;\n  if (!moment(dt, 'MM/DD/YYYY', true).isValid()) return false;\n  return true;\n};\n\n/**\n * Gets a luxon DateTime object from a date string\n * @param dt DateTime as string- should always be in the format `MM/DD/YYYY`\n * @returns DateTime or undefined\n */\nexport const getDateTime = (dt: string): DateTime | undefined => {\n  if (!isValidDate(dt)) return undefined;\n  const date = new Date(\n    +dt.substring(6, 10),\n    +dt.substring(0, 2) - 1,\n    +dt.substring(3, 5),\n  );\n  return DateTime.fromJSDate(date);\n};\n\n/**\n * Gets an age from a DateTime object\n * @param dob - luxon DateTime\n * @returns an age with years, months, days\n */\nexport const getDateTimeAge = (dob: DateTime): TAge => {\n  const now = DateTime.now();\n\n  const yearNow = now.year;\n  const monthNow = now.month;\n  const dateNow = now.day;\n\n  const yearDob = dob.year;\n  const monthDob = dob.month;\n  const dateDob = dob.day;\n\n  let years = yearNow - yearDob;\n  let months = 0;\n  if (monthNow >= monthDob) months = monthNow - monthDob;\n  else {\n    years -= 1;\n    months = 12 + monthNow - monthDob;\n  }\n\n  let days = 0;\n  if (dateNow >= dateDob) days = dateNow - dateDob;\n  else {\n    months -= 1;\n    days = 31 + dateNow - dateDob;\n\n    if (months < 0) {\n      months = 11;\n      years -= 1;\n    }\n  }\n\n  return {\n    years,\n    months,\n    days,\n  };\n};\n\n/**\n * Parses a date/time string and returns an Age object\n * @param dateOfBirth - should always be in the format `MM/DD/YYYY`\n * @returns an age, if the date is valid\n */\nexport const getAge = (dateOfBirth: string | undefined): TAge | undefined => {\n  if (!dateOfBirth || !isValidDate(dateOfBirth)) return undefined;\n\n  const dob = getDateTime(dateOfBirth);\n  if (!dob) return undefined;\n\n  return getDateTimeAge(dob);\n};\n","const MODE = process.env.NODE_ENV;\n\nconst qs = new URLSearchParams(window.location.search);\n\n// TODO: export a configuration class and instance\n\n// We're in dev mode if running locally OR if `dev` QS param says so\nexport const IS_DEV = MODE !== 'production'\n  || (qs.has('dev') && qs.get('dev') === 'true');\n\n// We're in dev mode if running locally OR if `dev` QS param says so\nexport const SHOW_STEPS = IS_DEV\n  || (qs.has('showSteps') && qs.get('showSteps') === 'true');\n","/*\n  eslint-disable no-console,\n                 @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n*/\n\nimport { IS_DEV } from './config';\nimport { log } from './log';\n\n/**\n * Logs to the console, but only when in DEV mode.\n * @param params\n */\nexport const debug = (...params: any) => {\n  if (IS_DEV) {\n    log(...params);\n  }\n};\n"],"sourceRoot":""}